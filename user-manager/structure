ДЗ на 14 урок:

 DONE~✅ 1. Поділити додаток на головні (app, core) модулі та фіча-модулі (фіча-модулі повинні виділятись окремим функціоналом або сторінками). Основна задача впровадити Multiple Module Structure в ваш проект.

 DONE~✅ 2. Додати для кожного модуля крім SharedModule створені в попередньому завданні маршрути (Routing). Тобто маршрути повинні підгружати (Lazy Loading) певний модуль, який в свою чергу запускає свій компонент.

 DONE~✅ 3. Кожний модуль повинен мати налаштування Lazy Loading (модуль повинен вантажитись лише тоді, коли користувач заходить на його маршрут, також модуль має мати окремий чанк в білді).

    DONE~✅ Логін на завданні до 14 уроку ми ще поки обходимо. Наразі просто нехай існує “заглушка” логіну, тобто імітацію логіну в систему і саму сторінку логіну. Яка буде доступна по роуту в вашому Angular проекті.

 DONE~✅ 4. Як і попередньому завданні повинен бути реалізований перехід по сторінках “/login” -> “Логін”, “/dashboard” -> “Головна”, “/users” -> “Список юзерів”, “/my-page” -> “Мій аккаунт”, “users/{user-id}” -> “Деталі юзера”, але уже з робочим Lazy Loading. 

 DONE~✅ 5. Роботу Lazy Loading треба протестувати та переконатися, що все працює, модулі повинні загружатися лише тоді коли в URL введений відповідний маршрут. А також в білді для модуля існує окремий чанк.

   DONE~✅   6. Ваше завдання розширити можливості проекту, тому на цьому етапі у вас повинні функціонувати вже усі завдання з 13 уроку і їх мають доповнювати завдання до даного 14 уроку.

 DONE~✅ 7. На кожній сторінці також перевірте зв`язок з BE частиною. Усі запити (GET, POST etc.) Повинні функціонувати. Користуйтесь для перевірки роботи серверної частини Chrome DevTools на вкладці Network.

 DONE~✅ 8. На сторінці “/users” додати список, можна використовувати Bootstrap, який виводить усі отримані з BE списки юзерів. Список юзерів потрібно вивести посортованими по імені в алфавітному порядку.

 DONE~✅ 9. Також на сторінці “/users” додати компоненту, що буде виконувати функціонал додавання в список нового юзера. Це повинно бути поле для вводу, кнопка “Add”, яка є заблокована до моменту поки юзер не почне вводити текст. 

 DONE~✅ Валідація повинна пропускати лише латиницю. Не можна пропустити: будь-які цифри, та символи типу !#:%,.()-_+^&*, а також кирилицю.

 DONE~✅ Усі помилки при валідації обробляти в юзерфрендлі форматі.

 DONE~✅ 10. Усі відповіді бекенда обробляти в юзерфрендлі форматі.

 DONE~✅ 11. Додатково: підключити до свого додатку Toastr для відображення повідомлень користувачеві про успішне створення, чи не успішне створення нового юзера.

 DONE~✅ А також створити NotifyService як обгортку для toastr сервісу в SharedModule.

 DONE~✅ Обробляти усі повідомлення (про помилки BE, про успішні запити, а також неуспішні), окрім валідації полів через NotifyService.

ДЗ на 13 урок:

DONE~✅— Створити Boilerplate для Angular проекту

DONE~✅— Головне завдання 13 уроку створити Angular Routing для переходу по різним сторінкам вашого проекту.

DONE~✅— Повинен бути вже частково готовий BE проекту, поки що без реалізації JWT авторизації, лише API та маршрутизація на стороні BE. 

DONE~✅— — Логін на завданні до 13 уроку ми поки обходимо. Наразі просто треба створити “заглушку” логіну, тобто імітацію логіну в систему і саму сторінку логіну. Яка буде доступна по роуту в вашому Angular проекті.

DONE~✅— Повинен бути реалізований перехід по сторінках “/login” -> “Логін”, “/dashboard” -> “Головна”, “/users” -> “Список юзерів”, “/my-page” -> “Мій акаунт”, “users/{user-id}” -> “Деталі юзера”.

DONE~✅— “Головна” - грає роль Welcome сторінки для цієї системи. На неї користувач попадає після Логіну в систему. На ній ми бачимо - header, footer, content (Welcome + Lorem Ipsum), sidebar menu (My Page -> веде на сторінку з деталями користувача що зайшов, Dashboard -> веде на головну, Users -> веде на сторінку з списком користувачів, Logout -> веде на Login сторінку)

DONE~✅— На цьому етапі найважливішим є структура файлів, робочий BE та створений роутинг для FE частини для переходу по сторінках.

DONE~✅— Наразі сторінки можуть бути або пустими, або місити контент заглушку. 

DONE~✅— Додавати контент та функціонал ми будемо на наступних ДЗ.

DONE~✅— Готове ДЗ 13 уроку повинно бути доступне на вашому GitHub акаунті, обовязково з використанням GitFlow. Без використання або без правильного використання GitFlow завдання не буде розцінюватись як завершене.